name: Build e Deploy da API Cotação

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch do repositório a ser usada"
        required: true
        default: "main"

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: https://sonarcloud.io
      IMAGE_NAME: api-cotacao

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Instalar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Instalar dependências
        run: npm install

      - name: Executar testes automatizados
        run: npm test

      - name: Análise SonarCloud
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Autenticar no Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build da imagem Docker
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/api-cotacao:latest .

      - name: Push da imagem para o Docker Hub
        run:
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/api-cotacao:latest

          # Enviar log para o Fluent Bit -> InfluxDB

      - name: Send log to InfluxDB via Fluent Bit
        if: always() # Garante execução mesmo se o job falhar
        run: |
          curl --location '${{ secrets.FLUENT_BIT_URL }}' \
          --header 'Content-Type: application/json' \
          --header 'Authorization: Basic ${{ secrets.FLUENT_BIT_AUTH_BA }}' \
          --data "{
            \"service\": \"github-actions\",
            \"workflow\": \"lambda-provisioning\",
            \"job\": \"terraform-${{ inputs.action }}\",
            \"status\": \"${{ job.status }}\",
            \"branch\": \"${GITHUB_REF_NAME}\",
            \"autor\": \"${GITHUB_ACTOR}\",
            \"timestamp\": \"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\"
          }"

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Autenticar na GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configurar acesso ao cluster GKE
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: cluster-estudo
          location: us-central1
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Aplicar deployment no GKE
        run: kubectl apply -f k8s/deployment.yaml

      # Enviar log para o Fluent Bit -> InfluxDB

      - name: Send log to InfluxDB via Fluent Bit
        if: always() # Garante execução mesmo se o job falhar
        run: |
          curl --location '${{ secrets.FLUENT_BIT_URL }}' \
          --header 'Content-Type: application/json' \
          --header 'Authorization: Basic ${{ secrets.FLUENT_BIT_AUTH_BA }}' \
          --data "{
            \"service\": \"github-actions\",
            \"workflow\": \"lambda-provisioning\",
            \"job\": \"terraform-${{ inputs.action }}\",
            \"status\": \"${{ job.status }}\",
            \"branch\": \"${GITHUB_REF_NAME}\",
            \"autor\": \"${GITHUB_ACTOR}\",
            \"timestamp\": \"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\"
          }"
